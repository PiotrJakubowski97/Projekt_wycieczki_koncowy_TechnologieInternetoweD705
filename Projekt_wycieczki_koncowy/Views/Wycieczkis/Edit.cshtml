@model Projekt_wycieczki_koncowy.Models.Wycieczki

@{
    ViewBag.Title = "Edytowanie wycieczki";
}

<h2>Edytowanie wycieczki</h2>

@using (Html.BeginForm("Edit", "Wycieczkis", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Msc_start, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Msc_start, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Msc_start, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Msc_end, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Msc_end, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Msc_end, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Data,
    new { htmlAttributes = new { @class = "form-control", placeholder = "Invoice date", @type = "date" } })
            @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Liczba_km, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Liczba_km, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Liczba_km, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Liczba_dni, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Liczba_dni, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Liczba_dni, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model=>model.VideoFile)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var wyswietl = 0;
                foreach (var item2 in Model.Images)
                {
                    wyswietl++;
                }
                if (wyswietl > 0)
                {
                    foreach (var item in Model.Images)
                    {

                        <img src="@Url.Content(item.ImgData)" width="25" height="25" />
                    }
                }

            }

        </div>
    </div>

    <div class="form-group">
        @Html.Label("Dodaj zdjęcia", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ImgData" id="ImgData" multiple="multiple" accept="image/png,image/jpg,image/jpeg" onclick="Clear()" />
            <p id="demo"> Pliki w formacie(jpg,jpeg,png), max ilość 6</p>
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.VideoFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (!string.IsNullOrWhiteSpace(Model.VideoFile))
            {
                <video width="25" height="25" controls alt="test">
                    <source src="@Url.Content(Model.VideoFile)" type="video/mp4" a />
                </video>
            }
            else
            {
                <text><p id="demo2" style="color:darkred;">Brak</p></text>
            }

        </div>
    </div>
    <div class="form-group">
        @Html.Label("Dodaj film", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="video" id="video" accept="video/mp4,video/x-m4v,video/*" onclick="Clear2()" />
            <p id="demo2"> Plik w formacie mp4</p>
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-default" onclick="return chechMedia()" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót do wszystkich wycieczek", "Index")
</div>
@section scripts
{
    <script type="text/javascript">
        function Clear() {
            document.getElementById("demo").innerHTML = "";
        }
        function Clear2() {
            document.getElementById("demo2").innerHTML = "";
        }
        function chechMedia() {
            val1 = checkImg();

            val2 = checkVideo();

            if (val1 == false || val2 == false) {
                return false;
            }
            else
                return true;
        }
        function checkVideo() {
            if (document.getElementById("video").files.length == 0)
                return true;
            var uploadFiles = document.getElementById("video")
            var fileName = uploadFiles.value,
                idxDot = fileName.lastIndexOf(".") + 1,
                extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
            if (extFile == "mp4") {
                return true;
            } else {
                document.getElementById("demo2").innerHTML = "Zły format filmu(wymagany mp4)";
                return false;
            }

        }
        function checkImg() {
            if (document.getElementById("ImgData").files.length == 0)
                return true;
            var uploadFiles = document.getElementById("ImgData")
            var fileName = uploadFiles.value,
                idxDot = fileName.lastIndexOf(".") + 1,
                extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
                if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                    if (uploadFiles.files.length > 5) {
                        document.getElementById("demo").innerHTML = "Zbyt dużo zdjęć(max 6)";
                        return false;
                    }
                    else {
                        return true;
                    }
                } else {
                    document.getElementById("demo").innerHTML = "Zły rodzaj pliku(dozwolone jpg,jpeg,png)";
                    return false;
                }


        }
    </script>
}