@model Projekt_wycieczki_koncowy.Models.User

@{
    ViewBag.Title = "EditUser";
}

<h2>Edytowanie danych uzytkownika</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.idUser)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Hasło" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    //
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Hasło" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    //
    <div class="form-group">
        @Html.LabelFor(model => model.Rola, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Rola, new List<SelectListItem>
               { new SelectListItem{Text="Administrator", Value="Admin"},
                 new SelectListItem{Text="Użytkownik uwierzytelniony", Value="User"}
                })
            @Html.ValidationMessageFor(model => model.Rola, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót do listy użytkowników", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
